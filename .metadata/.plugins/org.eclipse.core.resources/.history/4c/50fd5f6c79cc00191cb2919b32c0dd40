/*
 * calculadora.c
 *
 *  Created on: Aug 31, 2019
 *      Author: gabriel
 */

#include <stdio.h>
#include <stdio_ext.h>
#include <stdlib.h>
#include <string.h>
#include "calculadora.h"

//Linux
#define PURGAR __fpurge(stdin);
//Windows
//#define PURGAR fflush(stdin);

int getChar( char *resultado,
			  char *mensaje,
			  char *mensajeError,
			  char minimo,
			  char maximo,
			  int reintentos)
{
	int retorno = EXIT_ERROR;
	char buffer;
	if(	resultado != NULL &&
		mensaje	!= NULL &&
		mensajeError != NULL &&
		minimo < maximo &&
		reintentos >= 0)
	{
		do
		{
			printf("%s",mensaje);
			PURGAR
			if(scanf("%c",&buffer)==1)
			{
				if(buffer >= minimo && buffer <= maximo)
				{
					retorno = EXIT_SUCCESS;
					*resultado = buffer;
					break;
				}
			}
			printf("%s",mensajeError);
			reintentos--;
		}while(reintentos >= 0);
	}
	return retorno;
}

int getInt(	int *resultado,
			char *mensaje,
			char *mensajeError,
			int minimo,
			int maximo,
			int reintentos)
{
	int retorno = EXIT_ERROR;
	int buffer;
	if(	resultado != NULL &&
		mensaje	!= NULL &&
		mensajeError != NULL &&
		minimo < maximo &&
		reintentos >= 0)
	{
		do
		{
			printf("%s",mensaje);
			PURGAR
			if(scanf("%d",&buffer)==1)
			{
				if(buffer >= minimo && buffer <= maximo)
				{
					retorno = EXIT_SUCCESS;
					*resultado = buffer;
					break;
				}
			}
			printf("%s",mensajeError);
			reintentos--;
		}while(reintentos >= 0);
	}
	return retorno;
}

int getFloat(float *resultado,
			 char *mensaje,
			 char *mensajeError,
			 float minimo,
			 float maximo,
			 int reintentos)
{
	int retorno = EXIT_ERROR;
	float buffer;
	if(	resultado != NULL &&
		mensaje	!= NULL &&
		mensajeError != NULL &&
		minimo < maximo &&
		reintentos >= 0)
	{
		do
		{
			printf("%s",mensaje);
			PURGAR
			if(scanf("%f",&buffer)==1)
			{
				if(buffer >= minimo && buffer <= maximo)
				{
					retorno = EXIT_SUCCESS;
					*resultado = buffer;
					break;
				}
			}
			printf("%s",mensajeError);
			reintentos--;
		}while(reintentos >= 0);
	}
	return retorno;
}

int calculadora(void){
	int retorno = EXIT_ERROR;
	float operandoA = 0;
	float operandoB = 0;
	char operacion = MENU_SUMA;
	int opcionMenuInt;

	do{
		imprimirMenuMain(operandoA, operandoB);
		if(getInt(&opcionMenuInt, "Elija su opci√≥n\n", "Error\n", 1, 5, 10) == EXIT_ERROR){
			return retorno;
		}
		switch(opcionMenuInt){
			case MENU_OPERANDO_1:
				if(getFloat(&operandoA, "Ingrese el operando A\n", "Error\n", -3.4E+38, +3.4E+38, 10) == EXIT_ERROR){
					return retorno;
				}
				break;
			case MENU_OPERANDO_2:
				if(getFloat(&operandoB, "Ingrese el operando B\n", "Error\n", -3.4E+38, +3.4E+38, 10) == EXIT_ERROR){
					return retorno;
				}
				break;
			case MENU_OPERACION:
				imprimirMenuOperaciones();

				if(getChar(&operacion, "Ingrese el operador B\n", "Error\n", 'a', 'e', 10) == EXIT_ERROR){
					return retorno;
				}
				break;
			case MENU_RESULTADO:
				mostrarResultado(operandoA, operandoB, operacion);
				break;
		}
	}while(opcionMenuInt != MENU_SALIR);

	retorno = EXIT_SUCCESS;
	return retorno;
}

void imprimirMenuMain(float opA, float opB){
	printf("1. Ingresar 1er operando (A=%f)\n2. Ingresar 2do operando (B=%f)\n", opA, opB);
	printf("3. Calcular todas las operaciones \n4. Informar resultados \n5. Salir\n");
}

void imprimirMenuOperaciones(void){
	printf("a. Calcular la suma (A+B)\nb. Calcular la resta (A-B)\nc. Calcular la division(A/B)\n");
	printf("d. Calcular la multiplicacion (A*B)\ne. Calcular el factorial (A!)\n");
}

void mostrarResultado(float operandoA, float operandoB, char operacion){

	switch(operacion){
		case MENU_SUMA:
			printf("El resultado de A+B es: %f\n", sumar(operandoA, operandoB));
			break;
	}
}

float sumar(float op1, float op2){
	return op1 + op2;
}

