#include <stdio.h>
#include <stdlib.h>
#include "Employee.h"
#include "utn.h"

static int isValidId(int id);
static int isValidNombre(char* nombre);
static int isValidHorasTrabajadas(int horasTrabajadas);
static int isValidSueldo(int sueldo);




Employee* employee_new()
{
	return (Employee*)malloc(sizeof(Employee));
}

Employee* employee_newParametros(char* idStr,char* nombreStr,char* horasTrabajadasStr, char* sueldoStr)
{
	Employee* retorno = NULL;
	Employee* this;
	this = employee_new();
	if(		this!=NULL &&
			employee_setId(this, atoi(idStr))!=-1 &&
			employee_setNombre(this, nombreStr)!=-1 &&
			employee_setHorasTrabajadas(this, atoi(horasTrabajadasStr))!=-1 &&
			employee_setSueldo(this, atoi(sueldoStr))!=-1
			){
		retorno = this;
	}else{
		employee_delete(this);
	}
	return retorno;
}

void employee_delete(Employee* this)
{
	free(this);
}

int employee_setId(Employee* this, int id)
{
	int retorno = -1;
	static int maximoId = -1;
	if(this != NULL)
	{
		retorno = 0;
		if(id < 0)
		{
			maximoId++;
			this->id = maximoId;
		}
		else
		{
			if(id > maximoId)
			{
				maximoId = id;
			}
			this->id = id;
		}
	}
	return retorno;
}


int employee_getId(Employee* this,int* id)
{
	int retorno = -1;
	if(this!=NULL && id!=NULL)
	{
		retorno = 0;
		*id = this->id;
	}
	return retorno;
}

static int isValidId(int id)
{
	int retorno = 0;
	if(id >= 0){
		retorno = 1;
	}
	return retorno;
}

int employee_setNombre(Employee* this,char* nombre)
{
	int retorno = -1;
	if(this!=NULL && isValidNombre(nombre)){
		retorno = 0;
		strncpy(this->nombre, nombre,128);
	}
	return retorno;
}

int employee_getNombre(Employee* this,char* nombre)
{
	int retorno = -1;
	if(this!=NULL && nombre!=NULL)
	{
		retorno = 0;
		strncpy(nombre, this->nombre,128);
	}
	return retorno;
}

static int isValidNombre(char* nombre)
{
	int retorno = 0;
	if(chequear(nombre, 1, 0, " ") && strlen(nombre)<127)
	{
		retorno = 1;
	}
	return retorno;
}

int employee_setHorasTrabajadas(Employee* this,int horasTrabajadas)
{
	int retorno = -1;
	if(this!=NULL && isValidHorasTrabajadas(horasTrabajadas)){
		this->horasTrabajadas = horasTrabajadas;
		retorno = 0;
	}
	return retorno;
}

int employee_getHorasTrabajadas(Employee* this,int* horasTrabajadas)
{
	int retorno = -1;
	if(this!=NULL && horasTrabajadas!=NULL)
	{
		retorno = 0;
		*horasTrabajadas = this->horasTrabajadas;
	}
	return retorno;
}

static int isValidHorasTrabajadas(int horasTrabajadas)
{
	int retorno = 0;
	if(horasTrabajadas >= 0){
		retorno = 1;
	}
	return retorno;
}

int employee_setSueldo(Employee* this,int sueldo)
{
	int retorno = -1;
	if(this!=NULL && isValidSueldo(sueldo)){
		this->sueldo = sueldo;
		retorno = 0;
	}
	return retorno;
}

int employee_getSueldo(Employee* this,int* sueldo)
{
	int retorno = -1;
	if(this!=NULL && sueldo!=NULL)
	{
		retorno = 0;
		*sueldo = this->sueldo;
	}
	return retorno;
}

static int isValidSueldo(int sueldo)
{
	int retorno = 0;
	if(sueldo >= 0){
		retorno = 1;
	}
	return retorno;
}
